{"version":3,"sources":["assets/popcorn.jpg","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Messasge","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","HomePresenter","nowPlaying","upcoming","popular","loading","error","Helmet","Loader","map","movie","key","poster_path","original_title","vote_average","release_date","Message","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","TVApi","collectionApi","HomeContainer","state","data","results","this","setState","console","log","React","Component","TVPresenter","topRated","airingToday","show","original_name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","Backdrop","bgImage","Content","Cover","Data","ItemContainer","Divider","Overview","p","Imdb","TabMenu","TabBtn","button","selected","Tabs","Tab","Companies","Company","Logo","Countries","Seasons","Season","Collections","Collection","DetailPresenter","result","collection","useState","index","setIndex","backdrop_path","runtime","episode_run_time","genres","genre","name","href","imdb_id","overview","onClick","videos","width","height","src","production_countries","country","production_companies","company","logo_path","parts","part","seasons","season","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","belongs_to_collection","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fdbe841b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/popcorn.635c2bc0.jpg\";","import React from \"react\";\nimport {Link, withRouter} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    background-color: rgba(20, 20, 20, 0.8);\n    z-index: 10;\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n    display: flex;\n`;\n\nconst Item = styled.li`\n    width: 80px;\n    height: 50px;\n    text-align: center;\n    font-weight: bold;\n    font-size: 14px;\n    border-bottom: 3px solid ${props => props.current ? \"#79e5cb\":\"transparent\"};\n    transition: border-bottom .5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    span {\n        font-weight: bold;\n        font-size: 30px;\n        color: #62c1aa;\n        text-transform: uppercase;\n        margin: 0 20px;\n    }\n    span:hover {\n        color: #79e5cb;\n    }\n`;\n\nexport default withRouter(({location: {pathname}}) => (\n    <Header>\n        <SLink to=\"/\"><span>Bomflix</span></SLink>\n        <List>\n            <Item current={pathname === \"/\"}><SLink to=\"/\">Movies</SLink></Item>\n            <Item current={pathname === \"/TV\"}><SLink to=\"/TV\">TV</SLink></Item>\n            <Item current={pathname === \"/Search\"}><SLink to=\"/Search\">Search</SLink></Item>\n        </List>\n    </Header>\n));","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({title, children}) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.node),\n        PropTypes.node\n    ])\n};\n\nexport default Section;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 28px;\n    margin-top: 20px;\n    span{\n        margin: 50px;\n        font-size: 30px;\n    }\n`;\n\nexport default () => \n<Container>\n    <span role=\"img\" aria-label=\"Loading\">\n        Loading...\n    </span>\n</Container>","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\nconst Text = styled.span`\n    color: ${props => props.color};\n`;\nconst Messasge = ({text, color}) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n);\n\nMessasge.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired\n};\n\nexport default Messasge;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {Link} from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n    font-size: 12px;\n`;\n\nconst Image = styled.div`\n    background-image: url(${props => props.bgUrl});\n    height: 180px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position: center center;\n    transition: opacity 0.1s linear;\n`;\nconst Rating = styled.span`\n    position: absolute;\n    bottom: 5px;\n    right: 5px;\n    opacity: 0;\n    transition: opacity 0.1s linear;\n`;\nconst ImageContainer = styled.div`\n    margin-bottom: 5px;\n    position: relative;\n    &:hover {\n        ${Image} {\n            opacity: 0.3;\n        }\n        ${Rating} {\n            opacity: 1;\n        }\n    }\n`;\nconst Title = styled.span`\n    display: block;\n    margin-bottom: 3px;\n`;\nconst Year = styled.span`\n    font-size: 10px;\n    color: rgba(255,255,255, 0.5);\n`;\n\nconst Poster = ({id, imageUrl, title, rating, year, isMovie=false}) =>\n<Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n        <ImageContainer>\n            <Image bgUrl={imageUrl\n                ? `https://image.tmdb.org/t/p/w300${imageUrl}`\n                : require(\"../assets/popcorn.jpg\")}/>\n            <Rating>\n                <span role=\"img\" aria-label=\"rating\">\n                    ⭐️\n                </span>{\" \"}\n                {rating}/10\n            </Rating>\n        </ImageContainer>\n        <Title>{title.length > 15? `${title.substring(0, 15)}...` : title}</Title>\n        <Year>{year}</Year>\n    </Container>\n</Link>\n\nPoster.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool\n}\n\nexport default Poster;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst HomePresenter = ({nowPlaying, upcoming, popular, loading, error}) => \n<>\n    <Helmet>\n        <title>Movies | Bomflix</title>\n    </Helmet>\n    {loading ? <Loader /> : (\n        <Container>\n            {nowPlaying && nowPlaying.length > 0 && (\n                <Section title=\"Now Playing\">\n                    {nowPlaying.map(movie => (\n                        <Poster\n                            key = {movie.id}\n                            id={movie.id}\n                            imageUrl = {movie.poster_path}\n                            title={movie.original_title}\n                            rating = {movie.vote_average}\n                            year = {movie.release_date && movie.release_date.substring(0, 4)}\n                            isMovie = {true}\n                        />\n                    ))}\n                </Section>\n            )}\n            {upcoming && upcoming.length > 0 && (\n                <Section title=\"Upcoming Movies\">\n                    {upcoming.map(movie => (\n                        <Poster\n                            key = {movie.id}\n                            id={movie.id}\n                            imageUrl = {movie.poster_path}\n                            title={movie.original_title}\n                            rating = {movie.vote_average}\n                            year = {movie.release_date && movie.release_date.substring(0, 4)}\n                            isMovie = {true}\n                        />\n                    ))}\n                </Section>\n            )}\n            {popular && popular.length > 0 && (\n                <Section title=\"Popular Movies\">\n                    {popular.map(movie => (\n                        <Poster\n                            key = {movie.id}\n                            id={movie.id}\n                            imageUrl = {movie.poster_path}\n                            title={movie.original_title}\n                            rating = {movie.vote_average}\n                            year = {movie.release_date && movie.release_date.substring(0, 4)}\n                            isMovie = {true}\n                        />\n                    ))}\n                </Section>\n            )}\n            {error && <Message color=\"#e74c3c\" text={error} />}\n        </Container>\n    )}\n</>\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    upcoming: PropTypes.array,\n    popular: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default HomePresenter;","import axios from \"axios\";\n\nconst api = axios.create({\n    baseURL:\"https://api.themoviedb.org/3/\",\n    params:{\n        api_key:\"84ed74fda1c213a0d80c5e1533e55707\",\n        language: \"en-US\"\n    }\n});\n\nexport const moviesApi = {\n    nowPlaying: () => api.get(\"movie/now_playing\"),\n    upcoming: () => api.get(\"movie/upcoming\"),\n    popular: () => api.get(\"movie/popular\"),\n    movieDetail: (id) => \n        api.get(`movie/${id}`, {\n            params: {\n                append_to_response: \"videos\"\n            }\n    }),\n    search: (term) => \n        api.get(\"search/movie\", {\n            params: {\n                query: term\n            }\n    })\n}\n\nexport const TVApi =  {\n    topRated: () => api.get(\"tv/top_rated\"),\n    popular: () => api.get(\"tv/popular\"),\n    airingToday: () => api.get(\"tv/airing_today\"),\n    showDetail: (id) => api.get(`tv/${id}`, {\n        params: {\n            append_to_response: \"videos\"\n        }\n    }),\n    search: (term) => api.get(\"search/tv\", {\n        params: {\n            query: term\n        }\n    })\n}\n\nexport const collectionApi = (id) => api.get(`collection/${id}`);","import HomeContainer from \"./HomeContainer\"\n\nexport default HomeContainer;","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport {moviesApi} from \"api\";\n\nexport default class extends React.Component{\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true\n    };\n\n    async componentDidMount(){\n        try{\n            const {data:{results:nowPlaying}} = await moviesApi.nowPlaying();\n            const {data:{results:upcoming}} = await moviesApi.upcoming();\n            const {data:{results:popular}} = await moviesApi.popular();\n            this.setState({nowPlaying, upcoming, popular});\n        }catch{\n            this.setState({\n                error: \"Can't find movies information.\"\n            });\n        }finally{\n            this.setState({\n                loading: false\n            });\n        }\n    }\n\n    render() {\n        const {nowPlaying, upcoming, popular, error, loading} = this.state;\n        console.log(this.state);\n        return (\n            <HomePresenter \n                nowPlaying={nowPlaying}\n                upcoming={upcoming}\n                popular={popular}\n                error={error}\n                loading={loading}\n            />\n        );\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst TVPresenter = ({topRated, popular, airingToday, loading, error}) => \n<>\n    <Helmet>\n        <title>TV Shows | Bomflix</title>\n    </Helmet>\n    {loading ? <Loader /> : (\n        <Container>\n            {topRated && topRated.length > 0 && (\n                <Section title=\"Top Rated Shows\">\n                    {topRated.map(show => (\n                        <Poster\n                            key = {show.id}\n                            id={show.id}\n                            imageUrl = {show.poster_path}\n                            title={show.original_name}\n                            rating = {show.vote_average}\n                            year = {show.first_air_date && show.first_air_date.substring(0, 4)}\n                            isMovie = {false}\n                        />\n                    ))}\n                </Section>\n            )}\n            {popular && popular.length > 0 && (\n                <Section title=\"Popular Shows\">\n                    {popular.map(show => (\n                        <Poster\n                            key = {show.id}\n                            id={show.id}\n                            imageUrl = {show.poster_path}\n                            title={show.original_name}\n                            rating = {show.vote_average}\n                            year = {show.first_air_date && show.first_air_date.substring(0, 4)}\n                            isMovie = {false}\n                        />\n                    ))}\n                </Section>\n            )}\n            {airingToday && airingToday.length > 0 && (\n                <Section title=\"Airing Today\">\n                    {airingToday.map(show => (\n                        <Poster\n                            key = {show.id}\n                            id={show.id}\n                            imageUrl = {show.poster_path}\n                            title={show.original_name}\n                            rating = {show.vote_average}\n                            year = {show.first_air_date && show.first_air_date.substring(0, 4)}\n                            isMovie = {false}\n                        />\n                    ))}\n                </Section>\n            )}\n            {error && <Message color=\"#e74c3c\" text={error} />}\n        </Container>\n    )}\n</>\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default TVPresenter;","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport {TVApi} from \"../../api\";\n\nexport default class extends React.Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        loading: true,\n        error: null\n    };\n\n    async componentDidMount(){\n        try{\n            const {data: {results: topRated}} = await TVApi.topRated();\n            const {data: {results: popular}} = await TVApi.popular();\n            const {data: {results: airingToday}} = await TVApi.airingToday();\n            this.setState({topRated, popular, airingToday});\n        }catch{\n            this.setState({\n                error: \"Can't find movies information.\"\n            });\n        }finally{\n            this.setState({loading: false});\n        }\n    }\n\n    render() {\n        const {topRated, popular, airingToday, loading, error} = this.state;\n        return <TVPresenter \n            topRated={topRated}\n            popular={popular}\n            airingToday={airingToday}\n            loading={loading}\n            error={error}\n        />;\n    }\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Section from \"../../Components/Section\";\nimport Loader from \"../../Components/Loader\";\nimport Message from \"../../Components/Message\";\nimport Poster from \"../../Components/Poster\";\nimport Helmet from \"react-helmet\";\n\nconst Container = styled.div`\n    padding: 20px;\n`;\nconst Form = styled.form`\n    margin-bottom: 50px;\n    font-size: 28px;\n    display: flex;\n    align-items: center;\n`;\nconst Input = styled.input`\n    all: unset;\n    width: 100%;\n    margin-left: 5px;\n`;\n\nconst SearchPresenter = ({\n    movieResults, \n    tvResults, \n    searchTerm, \n    loading, \n    error, \n    handleSubmit,\n    updateTerm\n}) => (\n<>\n    <Helmet>\n        <title>Search | Bomflix</title>\n    </Helmet>\n    <Container>\n        <Form onSubmit={handleSubmit}>\n            <span>🔍</span>\n            <Input \n                placeholder=\"Search Movies or TV Shows...\" \n                value={searchTerm} \n                onChange={updateTerm} \n            />\n        </Form>\n        {loading ? <Loader /> : (\n            <>\n                {movieResults && movieResults.length > 0 && (\n                    <Section title=\"Movie Results\">\n                        {movieResults.map(movie =>(\n                            <Poster\n                                key = {movie.id}\n                                id={movie.id}\n                                imageUrl = {movie.poster_path}\n                                title={movie.original_title}\n                                rating = {movie.vote_average}\n                                year = {movie.release_date && movie.release_date.substring(0, 4)}\n                                isMovie = {true}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {tvResults && tvResults.length > 0 && (\n                    <Section title=\"TV Results\">\n                        {tvResults.map(show =>(\n                            <Poster\n                                key = {show.id}\n                                id={show.id}\n                                imageUrl = {show.poster_path}\n                                title={show.original_name}\n                                rating = {show.vote_average}\n                                year = {show.first_air_date && show.first_air_date.substring(0, 4)}\n                                isMovie = {false}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {error && <Message color=\"#e74c3c\" text={error} />}\n                {tvResults && \n                    movieResults && \n                    tvResults.length === 0 && \n                    movieResults.length === 0 && (\n                    <Message text=\"Nothing found\" color=\"#95a5a6\"/>\n                )}\n            </>\n        )}\n    </Container>\n</>\n);\n\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    searchTerm:PropTypes.string,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport {moviesApi, TVApi} from \"../../api\";\n\nexport default class extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: \"\",\n        loading: false,\n        error: null\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        const {searchTerm} = this.state;\n        if(searchTerm !== \"\") {\n            this.searchByTerm();\n        }\n    };\n\n    updateTerm = (event) => {\n        const {target:{value}} = event;\n        console.log(value);\n        this.setState({\n            searchTerm: value\n        });\n    };\n\n    searchByTerm = async() => {\n        const {searchTerm} = this.state;\n        this.setState({loading: true});\n        try {\n            const {data:{results:movieResults}} = await moviesApi.search(searchTerm);\n            const {data:{results:tvResults}} = await TVApi.search(searchTerm);\n            this.setState({movieResults, tvResults});\n        } catch {\n            this.setState({error:\"Can't find results.\"});\n        }finally {\n            this.setState({loading: false});\n        }\n    }\n\n    render() {\n        const {movieResults, tvResults, searchTerm, loading, error} = this.state;\n        console.log(this.state);\n        return <SearchPresenter \n            movieResults={movieResults}\n            tvResults={tvResults}\n            searchTerm={searchTerm}\n            loading={loading}\n            error={error}\n            handleSubmit = {this.handleSubmit}\n            updateTerm = {this.updateTerm}\n        />;\n    }\n}","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Loader from \"../../Components/Loader\";\nimport Helmet from \"react-helmet\";\nimport {Link} from \"react-router-dom\";\n\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n`;\nconst Backdrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index: 0;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: 1;\n`;\nconst Cover = styled.div`\n    width: 30%;\n    background-image: url(${props => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    height: 100%;\n    border-radius: 5px;\n`;\n\nconst Data = styled.div`\n    width: 70%;\n    margin-left: 10px;\n`;\n\nconst Title = styled.span`\n    font-size: 32px;\n    margin-bottom: 10px;\n`;\nconst ItemContainer = styled.div`\n    margin: 20px 0;\n`;\nconst Item = styled.span``;\nconst Divider = styled.span`\n    margin: 0 10px;\n`;\nconst Overview = styled.p`\n    font-size: 12px;\n    opacity: 0.7;\n    line-height: 1.5;\n`;\nconst Imdb = styled.a`\n    color: black;\n    background-color: #f4c617;\n    border-radius: 3px;\n    padding: 2px 3px;\n    font-weight: bold;\n`;\nconst TabMenu = styled.div`\n    margin-top: 20px;\n    display: flex;\n`;\nconst TabBtn = styled.button`\n    background: none;\n    border: none;\n    outline: none;\n    width: 33.33%;\n    padding: 10px 0;\n    font-weight: bold;\n    font-size: 14px;\n    color: ${props => props.selected ? \"white\":\"rgba(255, 255, 255, 0.7)\"};\n    background-color: ${props => props.selected ? \"rgba(0, 0, 0, 0.5)\":\"none\"};\n    &:hover {\n        color: white;\n        background-color: rgba(0, 0, 0, 0.5);\n    }\n`;\nconst Tabs = styled.div`\n    background-color: rgba(0, 0, 0, 0.5);\n    min-height: 200px;\n    padding: 20px;\n`;\nconst Tab = styled.div`\n    display: ${props => props.current ? \"flex\":\"none\"};\n    flex-direction: column;\n    &:first-child {\n        align-items: center;\n    }\n`;\nconst Companies = styled.div`\n    div {\n        display: flex;\n        flex-wrap: wrap;\n    }\n    h3 {\n        font-weight: bold;\n        font-size: 14px;\n        margin-bottom: 5px;\n    }\n`;\nconst Company = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 5px;\n    width: 100px;\n    text-align: center;\n    span {\n        margin-top: 5px;\n    }\n`;\nconst Logo = styled.div`\n    width: 70px;\n    height: 50px;\n    background-image: url(${props => props.bgImage});\n    background-color: white;\n    background-position: center center;\n    background-size: cover;\n    border-radius: 5px;\n`;\nconst Countries = styled.div`\n    margin-bottom: 20px;\n    h3 {\n        font-weight: bold;\n        font-size: 14px;\n        margin-bottom: 5px;\n    }\n`;\nconst Seasons = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`;\nconst Season = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 130px;\n    padding: 10px;\n    div{\n        width: 120px;\n        height: 180px;\n    }\n    h4 {\n        margin: 5px 0;\n        font-weight: bold;\n        font-size: 14px;\n    }\n`;\nconst Collections = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`;\nconst Collection = styled(Link)`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 130px;\n    padding: 10px;\n    div{\n        width: 120px;\n        height: 180px;\n    }\n    h4 {\n        margin: 5px 0;\n        font-weight: bold;\n        font-size: 14px;\n    }\n    &:hover {\n        opacity: 0.6;\n    }\n`;\n\n\n\nconst DetailPresenter = ({result, collection, isMovie, loading, error}) => {\n    const [index, setIndex] = useState(0);\n    return loading ? (\n    <>\n        <Helmet>\n            <title>Loading | Bomflix</title>\n        </Helmet>\n        <Loader />\n    </>\n    ) : (\n    <Container>\n        <Helmet>\n            <title>{result.original_title \n                    ? result.original_title\n                    : result.original_name} | Bomflix</title>\n        </Helmet>\n        <Backdrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}/>\n        <Content>\n            <Cover bgImage={\n                result.poster_path \n                ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                :require(\"../../assets/popcorn.jpg\")\n            }/>\n            <Data>\n                <Title>\n                    {result.original_title \n                    ? result.original_title\n                    : result.original_name}\n                </Title>\n                <ItemContainer>\n                    <Item>\n                        {result.release_date\n                        ? result.release_date.substring(0, 4)\n                        : result.first_air_date.substring(0, 4)}\n                    </Item>\n                    <Divider>•</Divider>\n                    <Item>\n                        {result.runtime\n                        ? result.runtime\n                        : result.episode_run_time[0]} min\n                    </Item>\n                    <Divider>•</Divider>\n                    <Item>\n                        {result.genres && \n                        result.genres.map((genre, index) => \n                            index === result.genres.length-1\n                            ? genre.name \n                            : `${genre.name}/`\n                        )}\n                    </Item>\n                    {isMovie && <>\n                    <Divider>•</Divider>\n                    <Item>\n                        <Imdb href={`https://www.imdb.com/title/${result.imdb_id}`}>IMDb</Imdb>\n                    </Item>\n                    </>}\n                    <Divider>•</Divider>\n                    <Item>\n                        <span>\n                            <span role=\"img\" aria-label=\"rating\">\n                                ⭐️\n                            </span>{\" \"}\n                            {result.vote_average}/10\n                        </span>\n                    </Item>\n                </ItemContainer>\n                <Overview>{result.overview}</Overview>\n                <TabMenu>\n                    <TabBtn onClick={() => setIndex(0)} selected={index === 0}>Video</TabBtn>\n                    <TabBtn onClick={() => setIndex(1)} selected={index === 1}>Production Info</TabBtn>\n                    <TabBtn onClick={() => setIndex(2)} selected={index === 2}>{isMovie? \"Collection\" : \"Season\"}</TabBtn>\n                </TabMenu>\n                <Tabs>\n                    <Tab current={index === 0}>\n                        {result.videos.results.length ?\n                        <iframe width=\"420\" height=\"315\" src={`https://www.youtube.com/embed/${result.videos.results[0].key}`}>    \n                        </iframe>\n                        : \"No video\"\n                        }\n                    </Tab>\n                    <Tab current={index === 1}>\n                        <Countries>\n                            <h3>Country</h3>\n                            <div>\n                                {result.production_countries && result.production_countries.length ?\n                                result.production_countries.map((country, index) => \n                                    index === result.production_countries.length-1\n                                    ? country.name \n                                    : `${country.name}/`\n                                ) : \"No country information\"}\n                            </div>\n                        </Countries>\n                        <Companies>\n                            <h3>Company</h3>\n                            <div>\n                                {result.production_companies && result.production_companies.length ? \n                                result.production_companies.map((company, index) => \n                                    <Company key={index}>\n                                        <Logo bgImage={\n                                            company.logo_path\n                                            ? `https://image.tmdb.org/t/p/original${company.logo_path}`\n                                            :require(\"../../assets/popcorn.jpg\")\n                                        }/>\n                                        <span>{company.name}</span>\n                                    </Company>\n                                ) : \"No company information\"}\n                            </div>\n                        </Companies>\n                    </Tab>\n                    <Tab current={index === 2}> \n                        {isMovie ? (\n                            collection?\n                            <Collections>\n                                {collection.parts.map((part) =>\n                                    <Collection to={`/movie/${part.id}`} key={part.id}>\n                                        <Cover bgImage={\n                                            part.poster_path \n                                            ? `https://image.tmdb.org/t/p/original${part.poster_path}`\n                                            :require(\"../../assets/popcorn.jpg\")\n                                        }/>\n                                        <h4>\n                                            {part.original_title ? part.original_title : part.original_name}\n                                        </h4>\n                                        <p>\n                                            {part.overview.length > 100 ?\n                                            `${part.overview.substring(0, 100)}...`\n                                            : part.overview\n                                            }\n                                        </p>\n                                    </Collection>\n                                )}\n                            </Collections>\n                            : \"No collection\"\n                        ):(\n                            <Seasons>\n                                {result.seasons ? \n                                result.seasons.map((season, index)=>\n                                <Season key={index}>\n                                    <Cover bgImage={\n                                        season.poster_path \n                                        ? `https://image.tmdb.org/t/p/original${season.poster_path}`\n                                        :require(\"../../assets/popcorn.jpg\")\n                                    }/>\n                                    <h4>{season.name}</h4>\n                                    <p>\n                                        {season.overview.length > 100 ?\n                                        `${season.overview.substring(0, 100)}...`\n                                        : season.overview\n                                        }\n                                    </p>\n                                </Season>)\n                                : \"No seasons\"}\n                            </Seasons>\n                        )}\n                    </Tab>\n                </Tabs>\n            </Data>\n        </Content>\n    </Container>\n    )\n};\n\nDetailPresenter.propTypes = {\n    result: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string\n};\n\nexport default DetailPresenter;","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;","import React from \"react\";\nimport { moviesApi, TVApi, collectionApi } from \"../../api\";\nimport DetailPresenter from \"./DetailPresenter\";\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const {location: {pathname}} = props;\n        this.state = {\n            result: null,\n            collection: null,\n            loading: true,\n            error: null,\n            isMovie: pathname.includes(\"/movie\")\n        };\n    }\n    \n    async componentDidMount() {\n        const {\n            match: {\n                params:{id}\n            },\n            history: {push}\n        } = this.props;\n        const {isMovie} = this.state;\n        const parsedId = parseInt(id);\n        if(isNaN(parsedId)) {\n            return push(\"/\");\n        }\n        let result = null;\n        let collection = null;\n        try{\n            if(isMovie) {\n                ({data:result} = await moviesApi.movieDetail(parsedId));\n            } else {\n                ({data:result} = await TVApi.showDetail(parsedId));\n            }\n            if(result.belongs_to_collection) {\n                ({data:collection} = await collectionApi(result.belongs_to_collection.id));\n            }\n            console.log(result);\n        }catch{\n            this.setState({error: \"Can't find anything\"});\n        }finally{\n            this.setState({loading: false, result, collection})\n        }\n    }\n\n    render() {\n        const {result, collection, isMovie, loading, error} = this.state;\n        return <DetailPresenter \n            result={result}\n            collection={collection}\n            isMovie = {isMovie}\n            loading={loading}\n            error={error}\n        />;\n    }\n}","import React from \"react\";\nimport {BrowserRouter as Router, Route, Redirect, Switch} from \"react-router-dom\";\nimport Header from \"Components/Header\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n    <Router>\n        <>\n        <Header/>\n        <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/TV\" exact component={TV} />\n            <Route path=\"/Search\" component={Search} />\n            <Route path=\"/movie/:id\" component={Detail} />\n            <Route path=\"/show/:id\" component={Detail} />\n            <Redirect from=\"*\" to=\"/\" />\n        </Switch>\n        </>\n    </Router>\n);","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n    * {\n        box-sizing: border-box;\n    }\n    body {\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color: rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n\n","import React, {Component} from 'react';\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nclass App extends Component {\n  render() {\n    return (\n    <>\n      <Router/>\n      <GlobalStyles/>\n    </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}